{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","currentPage","onPageChange","activeButtons","setActiveButtons","useState","prev","next","pageNumber","i","handledirectButton","number","newPage","length","_jsxs","className","children","_jsx","concat","cn","disabled","href","onClick","map","item","page","active","handleActivePage","items","App","optionVal","setOptionVal","pagesNr","setpagesNr","activePage","setActivePage","handleOptionChange","event","target","value","startFromElement","endOnElement","Math","min","itemsList","id","onChange","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4503d57.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useState } from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number;\n  // perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  // perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const [activeButtons, setActiveButtons] = useState({\n    prev: true,\n    next: false,\n  });\n\n  const pageNumber = [];\n\n  for (let i = 0; i < total; i += 1) {\n    pageNumber.push(i);\n  }\n\n  const handledirectButton = (number: number) => {\n    const newPage = currentPage + number;\n\n    onPageChange(newPage);\n\n    setActiveButtons({\n      prev: newPage === 0,\n      next: newPage === pageNumber.length - 1,\n    });\n  };\n\n  const handleActivePage = (page: number) => {\n    onPageChange(page);\n\n    setActiveButtons({\n      prev: page === 0,\n      next: page === pageNumber.length - 1,\n    });\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${cn({ disabled: activeButtons.prev })}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={activeButtons.prev}\n          onClick={() => handledirectButton(-1)}\n        >\n          «\n        </a>\n      </li>\n      {pageNumber.map(item => {\n        const page = item + 1;\n\n        return (\n          <li\n            key={item}\n            className={`page-item ${cn({ active: currentPage === item })}`}\n          >\n            <a\n              onClick={() => handleActivePage(item)}\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n            >\n              {page}\n            </a>\n          </li>\n        );\n      })}\n      <li className={`page-item ${cn({ disabled: activeButtons.next })}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={activeButtons.next}\n          onClick={() => handledirectButton(1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","// app.tsx\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [optionVal, setOptionVal] = useState(5);\n  const [pagesNr, setpagesNr] = useState(items.length / optionVal);\n  const [activePage, setActivePage] = useState(0);\n\n  const handleOptionChange = (\n    event: React.ChangeEvent<HTMLSelectElement> | number,\n  ) => {\n    if (typeof event === 'number') {\n      setActivePage(event);\n    } else {\n      setActivePage(0);\n      setOptionVal(+event.target.value);\n      setpagesNr(items.length / +event.target.value);\n    }\n  };\n\n  const startFromElement = optionVal * activePage + 1;\n  const endOnElement = Math.min(\n    optionVal * activePage + optionVal,\n    items.length,\n  );\n  const itemsList = getNumbers(startFromElement, endOnElement);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {activePage + 1} (items {`${startFromElement} - ${endOnElement}`}{' '}\n        of {items.length})\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={optionVal}\n            onChange={handleOptionChange}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={pagesNr}\n        // perPage={optionVal}\n        currentPage={activePage}\n        onPageChange={handleOptionChange}\n      />\n      <ul>\n        {itemsList.map(item => {\n          return (\n            <li key={item} data-cy=\"item\">\n              Item {item}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}